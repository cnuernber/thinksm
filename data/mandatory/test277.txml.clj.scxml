<?xml version="1.0" encoding="UTF-8"?><!-- test that platform creates undound variable if we assign an illegal value to it.  Thus
 we can assign to it later in state s1.  --><scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:conf="http://www.w3.org/2005/scxml-conformance" initial="s0" version="1.0" datamodel="clojure">
   <datamodel>
     <data id="Var1" expr="(throw (Throwable. &#34;illegal expression&#34;))"/>
     </datamodel>
     
 <state id="s0">
    <onentry>
    <raise event="foo"/>
    </onentry>
    
   <transition event="error.execution" cond="(not Var1)" target="s1"/>
   <transition event="*" target="fail"/>
   </state>
   
 <state id="s1">
 <onentry>
   <assign location="Var1" expr="1"/>
   </onentry>
   <transition cond="(=,Var1,1)" target="pass"/>
   <transition target="fail"/>

   </state>
   
   <final id="pass"><onentry><log label="Outcome" expr="&#34;pass&#34;"/></onentry></final>
   <final id="fail"><onentry><log label="Outcome" expr="&#34;fail&#34;"/></onentry></final>
     
</scxml>