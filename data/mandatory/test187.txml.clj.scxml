<?xml version="1.0" encoding="UTF-8"?><!-- we test that delayed <send> is not sent if the sending session terminates.  In this case,
a subscript is invoked which sends the event childToParent delayed by 1 second, and then terminates.  The
parent session, should not receive childToParent. If it does, we fail.  Otherwise the 
10 sec timer expires and we pass --><scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:conf="http://www.w3.org/2005/scxml-conformance" initial="s0" version="1.0" datamodel="clojure">

  
<state id="s0">
    <onentry>
      <send event="timeout" delayexpr="&#34;1s&#34;"/>
      </onentry>
    <invoke type="scxml">
    <content>
      <!-- exit before the delayed send can execute -->
         <scxml initial="sub0" version="1.0" datamodel="clojure">
           <state id="sub0">
              <onentry>
                <send event="childToParent" target="#_parent" delayexpr="&#34;.5s&#34;"/>
            </onentry>
          <transition target="subFinal"/>
          </state>
      <final id="subFinal"/>
    </scxml>
    </content>
   </invoke>
   
    <transition event="childToParent" target="fail"/>
    <transition event="timeout" target="pass"/>
</state>

   <final id="pass"><onentry><log label="Outcome" expr="&#34;pass&#34;"/></onentry></final>
   <final id="fail"><onentry><log label="Outcome" expr="&#34;fail&#34;"/></onentry></final>

</scxml>